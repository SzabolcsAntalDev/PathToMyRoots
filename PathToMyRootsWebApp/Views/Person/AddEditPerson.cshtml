@using PathToMyRootsWebApp.Constants
@using PathToMyRootsWebApp.Utils
@using PathToMyRootsWebApp.Models
@model PathToMyRootsWebApp.Models.PersonModel

<div>
    <h1>
        @if (Model?.Id > PathToMyRootsWebAppConstants.UnsetIntValue)
        {
            @:Edit Person
        }
        else
        {
            @:Add Person
        }
    </h1>

    <form asp-action="@((Model?.Id > PathToMyRootsWebAppConstants.UnsetIntValue) ? "EditPerson" : "AddPerson")" method="post" class="person-main-form">
        <h2>Personal Information</h2>
        <div class="grid-for-inputs person-section">
            @if (Model?.Id > 0)
            {
                <input type="hidden" name="Id" value="@Model.Id" />
            }

            <label for="noble-title-input">Noble Title:</label>
            <input type="text" id="noble-title-input" name="NobleTitle" value="@Model?.NobleTitle" />

            <label for="first-name-input">First Name:</label>
            <input type="text" id="first-name-input" name="FirstName" value="@Model?.FirstName" />

            <label for="last-name-input">Last Name:</label>
            <input type="text" id="last-name-input" name="LastName" value="@Model?.LastName" />

            <label for="maiden-name-input">Maiden Name:</label>
            <input type="text" id="maiden-name-input" name="MaidenName" value="@Model?.MaidenName" />

            <label for="other-names-input">Other Names:</label>
            <input type="text" id="other-names-input" name="OtherNames" value="@Model?.OtherNames" />

            <label>Gender:</label>
            <div class="dropdown">
                <div class="dropdown-header">
                    <div class="dropdown-header-selected-option"></div>
                    <div class="dropdown-header-expand-button"></div>
                </div>
                <div class="dropdown-menu-invisible-parent">
                    <div class="dropdown-menu">
                        <input type="text" class="dropdown-menu-filter-input collapsed" placeholder="Filter..." />
                        <ul>
                            <li data-value="true" class="@(Model?.IsMale == true ? "selected-option" : "")">Male</li>
                            <li data-value="false" class="@(Model?.IsMale == false ? "selected-option" : "")">Female</li>
                        </ul>
                        <input type="hidden" id="is-male-dropdown-menu-hidden-input" name="IsMale" />
                    </div>
                </div>
            </div>
        </div>

        <h2>Life Details (Birth and Death)</h2>
        <div class="flex-row-with-gap person-section">
            <div class="flex-column">
                <h3>Birth Date</h3>
                <fieldset class="input-date-fieldset">
                    <label>
                        <input type="radio" class="input-radio-date-unknown" name="input-radio-birth-date"
                        @if (Model?.BirthDate == null || Model?.BirthDate == DateHelper.UnknownServerDate)
                        {
                            @:checked
                        } />
                        Unknown
                    </label>
                    <label>
                        <input type="radio" class="input-radio-date-concrete-date" name="input-radio-birth-date"
                        @if (Model?.BirthDate != null && Model.BirthDate != DateHelper.UnknownServerDate)
                        {
                            @:checked
                        } />Date
                    </label>
                    <div class="toggleable-container">
                        <div>
                            <input type="text" class="input-date-concrete-date" placeholder="@DateHelper.InputDateFlatFormat"
                            @if (Model?.BirthDate != null && Model.BirthDate != DateHelper.UnknownServerDate)
                            {
                                @:value="@DateHelper.ServerDateToInputDate(@Model.BirthDate)"
                            } />
                        </div>
                    </div>
                    <input type="hidden" class="input-hidden-date" name="BirthDate" value="@DateHelper.ServerDateToInputDate(@Model.BirthDate)" />
                </fieldset>
            </div>

            <div class="flex-column">
                <h3>Death Date</h3>
                <fieldset class="input-date-fieldset">
                    <label>
                        <input type="radio" class="input-radio-date-ongoing" name="input-radio-death-date"
                        @if (Model?.DeathDate == null)
                        {
                            @:checked
                        } />Alive
                    </label>
                    <label>
                        <input type="radio" class="input-radio-date-unknown" name="input-radio-death-date"
                        @if (Model?.DeathDate == DateHelper.UnknownServerDate)
                        {
                            @:checked
                        } />Unknown
                    </label>
                    <label>
                        <input type="radio" class="input-radio-date-concrete-date" name="input-radio-death-date"
                        @if (Model?.DeathDate != null && Model.DeathDate != DateHelper.UnknownServerDate)
                        {
                            @:checked
                        } />Date
                    </label>
                    <div class="toggleable-container">
                        <div>
                            <input type="text" class="input-date-concrete-date" placeholder="@DateHelper.InputDateFlatFormat"
                                @if (Model?.DeathDate != null && Model.DeathDate != DateHelper.UnknownServerDate)
                                {
                                    @:value="@DateHelper.ServerDateToInputDate(@Model.DeathDate)"
                                } />
                            <input type="hidden" class="input-hidden-date" name="DeathDate" value="@DateHelper.ServerDateToInputDate(@Model.DeathDate)" />
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>

        <h2>Parental Information</h2>
        <div class="grid-for-inputs person-section">
            <label>Biological Father:</label>
            <div class="dropdown">
                <div class="dropdown-header">
                    <div class="dropdown-header-selected-option"></div>
                    <div class="dropdown-header-expand-button"></div>
                </div>
                <div class="dropdown-menu-invisible-parent">
                    <div class="dropdown-menu">
                        <input type="text" class="dropdown-menu-filter-input" placeholder="Filter..." />
                        <ul>
                            <li data-value="">-- Select Biological Father --</li>
                            @foreach (var father in ((List<PersonModel>)ViewBag.Persons).Where(p => p.IsMale).Where(p => p.Id != Model?.Id))
                            {
                                <li data-value="@father.Id" class="@(Model?.BiologicalFatherId == father.Id ? "selected-option" : "")">
                                    <div class="option-with-image">
                                        <img class="persons-img" src="https://localhost:7241/api/Image/get/@(father.ImageUrl ?? "missingImage.png")" />
                                        <span class="person-name-span">
                                            @PersonModelFormatter.ToFullNameAndBirthDate(father)
                                        </span>
                                    </div>
                                </li>
                            }
                        </ul>
                        <input type="hidden" name="BiologicalFatherId"/>
                    </div>
                </div>
            </div>

            <label>Biological Mother:</label>
            <div class="dropdown">
                <div class="dropdown-header">
                    <div class="dropdown-header-selected-option"></div>
                    <div class="dropdown-header-expand-button"></div>
                </div>
                <div class="dropdown-menu-invisible-parent">
                    <div class="dropdown-menu">
                        <input type="text" class="dropdown-menu-filter-input" placeholder="Filter..." />
                        <ul>
                            <li data-value="">-- Select Biological Mother --</li>
                            @foreach (var mother in ((List<PersonModel>)ViewBag.Persons).Where(p => !p.IsMale).Where(p => p.Id != Model?.Id))
                            {
                                <li data-value="@mother.Id" class="@(Model?.BiologicalMotherId == mother.Id ? "selected-option" : "")">
                                    <div class="option-with-image">
                                        <img class="persons-img" src="https://localhost:7241/api/Image/get/@(mother.ImageUrl ?? "missingImage.png")" />
                                        <span class="person-name-span">
                                            @PersonModelFormatter.ToFullNameAndBirthDate(mother)
                                        </span>
                                    </div>
                                </li>
                            }
                        </ul>
                        <input type="hidden" name="BiologicalMotherId" />
                    </div>
                </div>
            </div>

            <label>Adoptive Father:</label>
            <div class="dropdown">
                <div class="dropdown-header">
                    <div class="dropdown-header-selected-option"></div>
                    <div class="dropdown-header-expand-button"></div>
                </div>
                <div class="dropdown-menu-invisible-parent">
                    <div class="dropdown-menu">
                        <input type="text" class="dropdown-menu-filter-input" placeholder="Filter..." />
                        <ul>
                            <li data-value="">-- Select Adoptive Father --</li>
                            @foreach (var father in ((List<PersonModel>)ViewBag.Persons).Where(p => p.IsMale).Where(p => p.Id != Model?.Id))
                            {
                                <li data-value="@father.Id" class="@(Model?.AdoptiveFatherId == father.Id ? "selected-option" : "")">
                                    <div class="option-with-image">
                                        <img class="persons-img" src="https://localhost:7241/api/Image/get/@(father.ImageUrl ?? "missingImage.png")" />
                                        <span class="person-name-span">
                                            @PersonModelFormatter.ToFullNameAndBirthDate(father)
                                        </span>
                                    </div>
                                </li>
                            }
                        </ul>
                        <input type="hidden" name="AdoptiveFatherId" />
                    </div>
                </div>
            </div>

            <label>Adoptive Mother:</label>
            <div class="dropdown">
                <div class="dropdown-header">
                    <div class="dropdown-header-selected-option"></div>
                    <div class="dropdown-header-expand-button"></div>
                </div>
                <div class="dropdown-menu-invisible-parent">
                    <div class="dropdown-menu">
                        <input type="text" class="dropdown-menu-filter-input" placeholder="Filter..." />
                        <ul>
                            <li data-value="">-- Select Adoptive Mother --</li>
                            @foreach (var mother in ((List<PersonModel>)ViewBag.Persons).Where(p => !p.IsMale).Where(p => p.Id != Model?.Id))
                            {
                                <li data-value="@mother.Id" class="@(Model?.AdoptiveMotherId == mother.Id ? "selected-option" : "")">
                                    <div class="option-with-image">
                                        <img class="persons-img" src="https://localhost:7241/api/Image/get/@(mother.ImageUrl ?? "missingImage.png")" />
                                        <span class="person-name-span">
                                            @PersonModelFormatter.ToFullNameAndBirthDate(mother)
                                        </span>
                                    </div>
                                </li>
                            }
                        </ul>
                        <input type="hidden" name="AdoptiveMotherId" />
                    </div>
                </div>
            </div>
        </div>

        <h2>Marriage History</h2>
        <div class="flex-column person-section">
            <h3 for="first-spouse-select">First Spouse</h3>
            <div class="dropdown" id="first-spouse-dropdown">
                <div class="dropdown-header">
                    <div class="dropdown-header-selected-option"></div>
                    <div class="dropdown-header-expand-button"></div>
                </div>
                <div class="dropdown-menu-invisible-parent">
                    <div class="dropdown-menu">
                        <input type="text" class="dropdown-menu-filter-input" placeholder="Filter..." />
                        <ul>
                            <li data-value="">-- Select First Spouse --</li>
                            @foreach (var spouse in ((List<PersonModel>)ViewBag.Persons).Where(p => p.Id != Model?.Id))
                            {
                                <li data-value="@spouse.Id"
                                    data-is-male="@spouse.IsMale"
                                    class="@(Model?.FirstSpouseId == spouse.Id ? "selected-option" : "")">
                                    <div class="option-with-image">
                                        <img class="persons-img" src="https://localhost:7241/api/Image/get/@(spouse.ImageUrl ?? "missingImage.png")" />
                                        <span class="person-name-span">
                                            @PersonModelFormatter.ToFullNameAndBirthDate(spouse)
                                        </span>
                                    </div>
                                </li>
                            }
                        </ul>
                        <input type="hidden" name="FirstSpouseId" />
                    </div>
                </div>
            </div>
            <div id="first-spouse-marriage-dates-container" class="toggleable-container">
                <div class="flex-row-with-gap">
                    <div class="flex-column">
                        <h3>First Marriage Start Date</h3>
                        <fieldset class="input-date-fieldset">
                            <label>
                                <input type="radio" class="input-radio-date-unknown" name="input-radio-first-marriage-start-date"
                                @if (Model?.FirstMarriageStartDate == null || Model?.FirstMarriageStartDate == DateHelper.UnknownServerDate)
                                {
                                    @:checked
                                } />
                                Unknown
                            </label>
                            <label>
                                <input type="radio" class="input-radio-date-concrete-date" name="input-radio-first-marriage-start-date"
                                @if (Model?.FirstMarriageStartDate != null && Model.FirstMarriageStartDate != DateHelper.UnknownServerDate)
                                {
                                    @:checked
                                } />Date
                            </label>
                            <div class="toggleable-container">
                                <div>
                                    <input type="text" class="input-date-concrete-date" placeholder="@DateHelper.InputDateFlatFormat"
                                    @if (Model?.FirstMarriageStartDate != null && Model.FirstMarriageStartDate != DateHelper.UnknownServerDate)
                                    {
                                        @:value="@DateHelper.ServerDateToInputDate(@Model.FirstMarriageStartDate)"
                                    } />
                                </div>
                            </div>
                            <input type="hidden" class="input-hidden-date" name="FirstMarriageStartDate" value="@DateHelper.ServerDateToInputDate(@Model.FirstMarriageStartDate)" />
                        </fieldset>
                    </div>

                    <div class="flex-column">
                        <h3>First Marriage End Date</h3>
                        <fieldset class="input-date-fieldset">
                            <label>
                                <input type="radio" class="input-radio-date-ongoing" name="input-radio-first-marriage-end-date"
                                @if (Model?.FirstMarriageEndDate == null)
                                {
                                    @:checked
                                } />Still Married
                            </label>
                            <label>
                                <input type="radio" class="input-radio-date-unknown" name="input-radio-first-marriage-end-date"
                                @if (Model?.FirstMarriageEndDate == DateHelper.UnknownServerDate)
                                {
                                    @:checked
                                } />Unknown
                            </label>
                            <label>
                                <input type="radio" class="input-radio-date-concrete-date" name="input-radio-first-marriage-end-date"
                                @if (Model?.FirstMarriageEndDate != null && Model.FirstMarriageEndDate != DateHelper.UnknownServerDate)
                                {
                                    @:checked
                                } />Date
                            </label>
                            <div class="toggleable-container">
                                <div>
                                    <input type="text" class="input-date-concrete-date" placeholder="@DateHelper.InputDateFlatFormat"
                                    @if (Model?.FirstMarriageEndDate != null && Model.FirstMarriageEndDate != DateHelper.UnknownServerDate)
                                    {
                                        @:value="@DateHelper.ServerDateToInputDate(@Model.FirstMarriageEndDate)"
                                    } />
                                </div>
                            </div>
                            <input type="hidden" class="input-hidden-date" id="input-hidden-first-marriage-end-date" name="FirstMarriageEndDate" value="@DateHelper.ServerDateToInputDate(@Model.FirstMarriageEndDate)" />
                        </fieldset>
                    </div>
                </div>
            </div>
            <h3 for="second-spouse-select">Second Spouse</h3>
            <div class="dropdown" id="second-spouse-dropdown">
                <div class="dropdown-header">
                    <div class="dropdown-header-selected-option"></div>
                    <div class="dropdown-header-expand-button"></div>
                </div>
                <div class="dropdown-menu-invisible-parent">
                    <div class="dropdown-menu">
                        <input type="text" class="dropdown-menu-filter-input" placeholder="Filter..." />
                        <ul>
                            <li data-value="">-- Select Second Spouse --</li>
                            @foreach (var spouse in ((List<PersonModel>)ViewBag.Persons).Where(p => p.Id != Model?.Id))
                            {
                                <li data-value="@spouse.Id"
                                    data-is-male="@spouse.IsMale"
                                    class="@(Model?.SecondSpouseId == spouse.Id ? "selected-option" : "")">
                                    <div class="option-with-image">
                                        <img class="persons-img" src="https://localhost:7241/api/Image/get/@(spouse.ImageUrl ?? "missingImage.png")" />
                                        <span class="person-name-span">
                                            @PersonModelFormatter.ToFullNameAndBirthDate(spouse)
                                        </span>
                                    </div>
                                </li>
                            }
                        </ul>
                        <input type="hidden" name="SecondSpouseId" />
                    </div>
                </div>
            </div>
            <div id="second-spouse-marriage-dates-container" class="toggleable-container">
                <div class="flex-row-with-gap">
                    <div class="flex-column">
                        <h3>Second Marriage Start Date</h3>
                        <fieldset class="input-date-fieldset">
                            <label>
                                <input type="radio" class="input-radio-date-unknown" name="input-radio-second-marriage-start-date"
                                @if (Model?.SecondMarriageStartDate == null || Model?.SecondMarriageStartDate == DateHelper.UnknownServerDate)
                                {
                                    @:checked
                                } />
                                Unknown
                            </label>
                            <label>
                                <input type="radio" class="input-radio-date-concrete-date" name="input-radio-second-marriage-start-date"
                                @if (Model?.SecondMarriageStartDate != null && Model.SecondMarriageStartDate != DateHelper.UnknownServerDate)
                                {
                                    @:checked
                                } />Date
                            </label>
                            <div class="toggleable-container">
                                <div>
                                    <input type="text" class="input-date-concrete-date" name="input-radio-second-marriage-start-date" placeholder="@DateHelper.InputDateFlatFormat"
                                    @if (Model?.SecondMarriageStartDate != null && Model.SecondMarriageStartDate != DateHelper.UnknownServerDate)
                                    {
                                        @:value="@DateHelper.ServerDateToInputDate(@Model.SecondMarriageStartDate)"
                                    } />
                                </div>
                            </div>
                            <input type="hidden" class="input-hidden-date" name="SecondMarriageStartDate" value="@DateHelper.ServerDateToInputDate(@Model.SecondMarriageStartDate)" />
                        </fieldset>
                    </div>
                
                    <div class="flex-column">
                        <h3>Second Marriage End Date</h3>
                        <fieldset class="input-date-fieldset">
                            <label>
                                <input type="radio" class="input-radio-date-ongoing" name="input-radio-second-marriage-end-date"
                                @if (Model?.SecondMarriageEndDate == null)
                                {
                                    @:checked
                                } />Still Married
                            </label>
                            <label>
                                <input type="radio" class="input-radio-date-unknown" name="input-radio-second-marriage-end-date"
                                @if (Model?.SecondMarriageEndDate == DateHelper.UnknownServerDate)
                                {
                                    @:checked
                                } />Unknown
                            </label>
                            <label>
                                <input type="radio" class="input-radio-date-concrete-date" name="input-radio-second-marriage-end-date"
                                @if (Model?.SecondMarriageEndDate != null && Model.SecondMarriageEndDate != DateHelper.UnknownServerDate)
                                {
                                    @:checked
                                } />Date
                            </label>
                            <div class="toggleable-container">
                                <div>
                                    <input type="text" class="input-date-concrete-date" placeholder="@DateHelper.InputDateFlatFormat"
                                    @if (Model?.SecondMarriageEndDate != null && Model.SecondMarriageEndDate != DateHelper.UnknownServerDate)
                                    {
                                        @:value="@DateHelper.ServerDateToInputDate(@Model.SecondMarriageEndDate)"
                                    } />
                                </div>
                            </div>
                            <input type="hidden" class="input-hidden-date" name="SecondMarriageEndDate" value="@DateHelper.ServerDateToInputDate(@Model.SecondMarriageEndDate)" />
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>

        <h2>Image Upload</h2>
        <div class="flex-column person-section" style="align-items: center">

            <div class="flex-column" style="width: 50%">
                <div id="toggleable-preview-image-container" class="toggleable-container">
                    <div>
                        <img id="preview-image" class="person-preview-image" />
                    </div>
                </div>
                <div class="flex-row">
                    <input type="hidden" id="hidden-image-input-url" name="ImageUrl" value="@Model?.ImageUrl" />
                    <input type="file" id="hidden-image-input" accept="image/*" style="display: none" />
                    <button id="select-image-button" class="flex-one">Select Image...</button>
                    <button id="remove-image-button" class="flex-one">Remove Image</button>
                </div>
            </div>
            <div id="cropper-background-container" style="display: none;">
                <div id="cropper-image-and-button-container">
                    <img id="image-to-crop" />
                    <button id="confirm-crop-button">Confirm Crop</button>
                    <button id="cancel-crop-button">Cancel</button>
                </div>
            </div>
        </div>

        <div style="display: block; text-align: right;">
            <button type="submit" class="person-save-button">
                @(Model?.Id == PathToMyRootsWebAppConstants.UnsetIntValue ? "Add" : "Update")
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        const DateInputPattern = '@Html.Raw(DateHelper.InputDateValidationPattern)';
        const UnknownInputDate = '@Html.Raw(DateHelper.UnknownInputDate)';
        const DateInputFlatFormat = '@Html.Raw(DateHelper.InputDateFlatFormat)';
    </script>

    <script src="~/js/libs/cropper.js"></script>
    <script src="~/js/add-edit-person/add-edit-person.js"></script>
    <script src="~/js/add-edit-person/dropdown.js"></script>
    <script src="~/js/add-edit-person/date-input.js"></script>
    <script src="~/js/add-edit-person/image.js"></script>
    
}